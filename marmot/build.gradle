plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'maven-publish'
}

repositories {
    mavenCentral()
}


tasks.wrapper {
    gradleVersion = "8.0"
    // You can either download the binary-only version of Gradle (BIN) or
    // the full version (with sources and documentation) of Gradle (ALL)
    distributionType = Wrapper.DistributionType.ALL
}

sourceSets {
    main {
        java {
            srcDirs 'src'
        }
    }
}
dependencies {
    implementation files(fileTree(dir: 'lib', include: '*.jar'))
    implementation 'org.apache.opennlp:opennlp-tools:2.3.2'
    implementation 'org.apache.opennlp:opennlp-maxent:3.0.3'
    //implementation 'trove4j:trove4j:3.0.3'
    implementation 'org.apache.commons:commons-compress:1.26.1'
    implementation 'com.martiansoftware:jsap:2.1'
    implementation 'cc.mallet:mallet:2.0.8'
    implementation 'org.javatuples:javatuples:1.2'
}

afterEvaluate {
    publishing {
        publications {
            installShadowDistPublicationToMavenLocal(MavenPublication) {
                artifact jar
                artifactId = 'cistern'
                groupId = 'cistern'
                version = '1.0.4'
            }
// Creates a Maven publication called "release".
        }
    }
}

application {
    // Define the main class for the application.
    mainClass = 'marmot.morph.cmd.Annotator'
}

jar {
    archiveBaseName = 'cistern-snapshot'
    archiveVersion = '1.0.3'
    destinationDir = file("${projectDir}")
    // from file(classesDir)
    manifest.attributes(
        'Class-Path': configurations.compileClasspath.collect { it.getName() }.join(' '),
        'Main-Class': 'marmot.morph.cmd.Annotator'
    )
    shadowJar {
        destinationDir = file("${projectDir}")
        archiveBaseName.set("cistern")
        archiveClassifier.set('')
        archiveVersion.set('snapshot')
    }
}

